name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REPO: <ecr-repo-name>

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint
        
  test:
    runs-on: ubuntu-latest
    env:
      FRONTEND_PATH: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: CI=true npm test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          cd starter/backend
          docker build -t mp-backend:${{ github.sha }} .

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker image to ECR
        run: |
          docker tag mp-backend:${{ github.sha }} ${{ env.ECR_REPO }}:${{ github.sha }}
          docker push ${{ env.ECR_REPO }}:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=${{ env.ECR_REPO }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
