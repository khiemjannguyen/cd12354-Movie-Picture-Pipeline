name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BACKEND_ECR: <backend_ecr_url> # Replace with your backend ECR URL (295436541395.dkr.ecr.us-east-1.amazonaws.com/backend)

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Ensure flake8 is installed
        run: pipenv install flake8

      - name: Install dependencies
        run: pipenv install

      - name: Run lint
        run: pipenv run lint
        
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    env:
      FRONTEND_PATH: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install

      - name: Run test
        run: pipenv run test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t mp-backend:${{ github.sha }} .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Push Docker image to ECR
        run: |
          docker tag mp-backend:${{ github.sha }} ${{ env.BACKEND_ECR }}:${{ github.sha }}
          docker push ${{ env.BACKEND_ECR }}:${{ github.sha }}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name backend --region us-east-1

      - name: Deploy to Kubernetes
        run: |
          cd k8s
          kustomize edit set image backend=${{ env.BACKEND_ECR }}:${{ github.sha }}
          kustomize build | kubectl apply -f - --validate=false